#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT 0
#define FUNC  1
#define SYM  2

/ {
    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
            key-positions = <1 2>;
            bindings = <&kp ESC>;
        };
    };
   behaviors {
        clear_tog: clear_toggle {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&bt BT_CLR>, <&tog FUNC>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        just_bkspc: just_bkspc {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&mt RIGHT_CONTROL BACKSPACE>, <&kp BACKSPACE>;
            mods = <(MOD_LSFT)>;
            };
        grave_tog: grave_toggle {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp GRAVE>, <&tog FUNC>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            };
        sl_tog: sticky_layer_toggle {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&sl FUNC>, <&tog FUNC>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            };
        hspc: holdable_backspace {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&mt RIGHT_CONTROL BACKSPACE>, <&kp BACKSPACE>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            };
        h_left: h_left_hold {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp H>, <&kp LEFT>;
            mods = <MOD_LCTL>;
            };
        j_down: j_down_hold {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp J>, <&kp DOWN>;
            mods = <MOD_LCTL>;
            };
        k_up: k_up_hold {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp K>, <&kp UP>;
            mods = <(MOD_LCTL)>;
            };
        l_right: l_right_hold {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp L>, <&kp RIGHT>;
            mods = <(MOD_LCTL)>;
            };
        ctrl_gui: left_ctrl_gui {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LEFT_CONTROL>, <&kp LGUI>;
        };
        td_to_func: dance_switch_to_func {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mt RIGHT_SHIFT RET>, <&tog FUNC>;
        };
        td_to_symbol: dance_switch_to_symbol {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mt RIGHT_SHIFT RET>, <&tog SYM>;
        };
        td_layer: dance_morph_layer {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&td_to_func>, <&td_to_symbol>;
            mods = <(MOD_LSFT|MOD_RSFT|MOD_LALT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                                          |  Y   |  U    |  I    |  O   |   P   |   \  |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                                          |  H   |  J    |  K    |  L   |   ;   |   '  |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   | L SHIFT | L SHIFT |  | LAYER 1 | L SHIFT |  N   |  M    |  ,    |  .   |   /   | CTRL |
            //                     | GUI  | DEL  | RET  |  SPACE  |   ESC   |  |   RET   |  SPACE  | TAB  | BSPC  | R-ALT |

            bindings = <
            &grave_tog  &kp Q  &kp W  &kp E &kp R &kp T                                                                  &kp Y              &kp U     &kp I      &kp O    &kp P     &kp BSLH
            &mt LEFT_CONTROL TAB    &kp A  &kp S  &kp D &kp F &kp G                                                                  &h_left &j_down &k_up &l_right &kp SEMI  &kp SQT
            &kp MINUS  &kp Z  &kp X  &kp C &kp V &kp B  &trans   &kp RIGHT_CONTROL  &trans &sl_tog &kp N             &kp M     &kp COMMA  &kp DOT  &kp FSLH  &kp EQUAL
                       &kp C_MUTE  &ctrl_gui &mt LEFT_SHIFT LEFT_BRACKET &kp SPACE &mt LEFT_ALT ESC    &td_layer  &just_bkspc  &kp RIGHT_BRACKET  &lt FUNC BSPC  &kp HOME
            >;

            sensor-bindings = <&inc_dec_kp UP DOWN &inc_dec_kp UP DOWN>;
        };

        func_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |       |      |BT_CLR|BTSEL0|BTSEL1|BTSEL2|                                         |      |      |      |      |      |      |
            // |       |      |      |BTSEL3|BTSEL4|      |                                         |      |      |      |      |      |      |
            // |       |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |

            //                       |      |      |      |      |      |      |      |      |      |      |      |      |
            bindings = <
               &bt BT_CLR  &bt BT_PRV &kp W   &bt BT_NXT    &bt BT_SEL 0 &bt BT_NXT                &kp C_RW    &kp C_PP     &kp C_FF   &trans  &trans  &trans
               &kp TAB &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4 &kp NUMBER_5                      &kp LEFT    &kp DOWN     &kp UP      &kp RIGHT   &trans  &trans
            &trans  &kp NUMBER_6  &kp NUMBER_7 &kp NUMBER_8   &kp NUMBER_9 &kp NUMBER_0 &trans &trans       &trans  &tog FUNC  &kp C_BRI_DN  &kp C_BRI_UP  &kp C_BRI_AUTO  &trans  &trans  &trans
                       &kp C_MUTE        &trans       &kp LEFT_SHIFT &kp SPACE  &lt LEFT_ALT ESC                   &td_layer  &lt RIGHT_CONTROL BSPC  &trans  &trans  &kp HOME
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
        symbol_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |       |      |BT_CLR|BTSEL0|BTSEL1|BTSEL2|                                         |      |      |      |      |      |      |
            // |       |      |      |BTSEL3|BTSEL4|      |                                         |      |      |      |      |      |      |
            // |       |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |

            //                       |      |      |      |      |      |      |      |      |      |      |      |      |
            bindings = <
               &bt BT_CLR  &bt BT_PRV &kp W   &bt BT_NXT    &bt BT_SEL 0 &bt BT_NXT k                &kp C_RW    &kp C_PP     &kp C_FF   &trans  &trans  &trans
                &kp TAB &kp EXCLAMATION  &kp AT_SIGN  &kp HASH &kp DOLLAR &kp PERCENT                      &kp LEFT    &kp DOWN     &kp UP      &kp RIGHT   &trans  &trans
               &trans  &kp CARET &kp AMPERSAND &kp STAR &kp LEFT_PARENTHESIS &kp RIGHT_PARENTHESIS &trans &trans       &trans  &tog SYM  &kp C_BRI_DN  &kp C_BRI_UP  &kp C_BRI_AUTO  &trans  &trans  &trans
                       &kp C_MUTE        &trans       &kp LEFT_SHIFT &kp SPACE  &lt LEFT_ALT ESC                   &td_layer  &lt RIGHT_CONTROL BSPC  &trans  &trans  &kp HOME
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

    };
};
