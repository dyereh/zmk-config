/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/* Uncomment this block if using RGB
&led_strip {
    chain-length = <6>;
    // chain-length = <31>; // Uncomment if using both per-key and underglow LEDs
    // chain-length = <25>; // Uncomment if using only per-key LEDs.
};
 */

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                                          |  Y   |  U    |  I    |  O   |   P   |   \  |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                                          |  H   |  J    |  K    |  L   |   ;   |   '  |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   | L SHIFT | L SHIFT |  | LAYER 1 | L SHIFT |  N   |  M    |  ,    |  .   |   /   | CTRL |
            //                     | GUI  | DEL  | RET  |  SPACE  |   ESC   |  |   RET   |  SPACE  | TAB  | BSPC  | R-ALT |

            bindings = <
&trans     &kp Q  &kp W  &kp E   &kp R   &kp T                                                               &kp Y  &kp U   &kp I      &kp O    &kp P                &kp BSLH
&lt 1 TAB  &kp A  &kp S  &kp D   &kp F   &kp G                                                               &kp H  &kp J   &kp K      &kp L    &mt LEFT_SHIFT SEMI  &lt 1 SQT
&trans     &kp Z  &kp X  &kp C   &kp V   &kp B                   &trans         &trans   &trans   &trans     &kp N  &kp M   &kp COMMA  &kp DOT  &kp FSLH             &kp EXCLAMATION
                         &trans  &trans  &mt LEFT_GUI BACKSPACE  &mt LCTRL TAB  &kp RET  &kp ESC  &kp SPACE  &mo 2  &trans  &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        function_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |       |      |BT_CLR|BTSEL0|BTSEL1|BTSEL2|                                         |      |      |      |      |      |      |
            // |       |      |      |BTSEL3|BTSEL4|      |                                         |      |      |      |      |      |      |
            // |       |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |
            //                       |      |      |      |      |      |      |      |      |      |      |      |      |

            bindings = <
&trans        &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp LEFT_BRACKET      &kp GRAVE                                                                       &kp DOLLAR      &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACKET  &kp RIGHT_BRACE  &trans          &kp TILDE
&kp NUMBER_0  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp LEFT_PARENTHESIS  &kp CARET                                                                       &kp LEFT_ARROW  &kp DOWN_ARROW         &kp UP_ARROW       &kp RIGHT_ARROW  &kp UNDERSCORE  &kp EQUAL
&kp PERCENT   &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp LEFT_BRACE        &kp AMPERSAND  &trans                &trans    &trans    &trans                 &kp ASTERISK    &kp MINUS              &kp GREATER_THAN   &kp POUND        &kp AT_SIGN     &kp PLUS
                                          &kp K_MUTE    &trans                &kp LBRC       &kp LEFT_PARENTHESIS  &kp LBKT  &kp RBKT  &kp RIGHT_PARENTHESIS  &kp RBRC        &kp C_VOL_DN           &kp C_VOL_UP
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        number_layer {
            bindings = <
&trans  &trans  &kp N1  &kp N2  &kp N3  &trans                                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp N0  &kp N4  &kp N5  &kp N6  &trans                                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp N7  &kp N8  &kp N9  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
